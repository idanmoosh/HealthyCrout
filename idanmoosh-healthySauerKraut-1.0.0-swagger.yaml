openapi: 3.0.0
info:
  description: 'healthy sauerkraut'
  version: "1.0.0"
  title: Healthy sauerkraut
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: Idan Haim
    email: idanmoosh@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: register
    description: registration and authentication 
  - name: product
    description: Access to Petstore orders
  - name: user
    description: Operations about user
  - name: order
    description: Operations about user

paths:
  /auth/register:
    post:
      tags:
        - register
      summary: using user input to perform registration
      operationId: register
      responses:
        '201':
          description: Created
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
      requestBody:
        $ref: ''
   
  /auth/login:
    post:
      tags:
        - login
      summary: using user input to perform authentication
      operationId: loginUser
      responses:
        '200':
          description: OK
        '405':
          description: Invalid input
        '500':
          description: Internal Server Error
      
   
  /cart/mine:
    get:
      tags:
        - cart
      summary: Find your cart if exist
      description: uploads cart from the database
      operationId: findMyCart
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: integer
            items:
              type: object
              default: available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid status value
    put:
      tags:
        - cart
      summary: update your cart
      description: updates cart from the database
      operationId: updateMyCart
      parameters:
        - name: status
          in: query
          schema:
            type: integer
            items:
              type: object
              default: available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid status value
    post:
      tags:
        - cart
      summary: create your cart
      description: create cart and insert in the database
      operationId: createMyCart
      parameters:
        - name: status
          in: query
          schema:
            type: integer
            items:
              type: object
              default: available
      responses:
        '201':
          description: successful creation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid status value
 
  /cart/mine/items:
    post:
      tags:
        - cart
        - item
      summary: add item to cart
      description: adding item to the relevant database
      operationId: addItemToCart
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          explode: true
          schema:
            type: integer
            items:
              type: object
              default: available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid status value
          
  /cart/mine/items/cartItemId :
    put:
      tags:
        - cart
      summary: update your cart items
      description: updates cart  item to the database
      operationId: updateCartItem
      parameters:
        - name: cartItemId
          in: query
          schema:
            type: integer
            default: not available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid status value
   
    delete:
      tags:
        - cart
      summary: delete your cart items
      description: delete cart  item to the database
      operationId: delete cart items
      parameters:
        - name: cartItemId
          in: query
          schema:
            type: integer
            default: not available
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid status value
   
  /cart/mine/checkout :
    post:
      tags:
        - cart
      summary: sends carts to create an order
      description: submit the cart to accomplish an order
      operationId: submitCart
      parameters:
        - name: id
          in: query
          description: id of the cart
          required: true
          explode: true
          schema:
            type: object
            items:
              type: object
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid tag value
components:
  schemas:
    cart:
      type: object
      properties:
        id:
          type: integer
          format: int64
      description: |
        object containing items
    user:
      description: |
        object conatining password , name , email - uses as a reference for orders id